<?php
/**
 * Contains the TaxonomyTest class.
 *
 * @copyright   Copyright (c) 2018 Attila Fulop
 * @author      Attila Fulop
 * @license     MIT
 * @since       2018-08-27
 *
 */

namespace Vanilo\Category\Tests;

use Vanilo\Category\Models\Taxon;
use Vanilo\Category\Models\Taxonomy;

class TaxonomyTest extends TestCase
{
    /** @test */
    public function taxonomies_must_have_a_name()
    {
        $this->expectExceptionMessageRegExp('/NOT NULL constraint failed: taxonomies\.name/');

        Taxonomy::create();
    }

    /** @test */
    public function slug_is_autogenerated_from_name()
    {
        $taxonomy = Taxonomy::create(['name' => 'Example Category']);

        $this->assertEquals('example-category', $taxonomy->slug);
    }

    /** @test */
    public function can_return_the_root_level_taxons()
    {
        $category = Taxonomy::create(['name' => 'Category']);

        $root1 = Taxon::create(['taxonomy_id' => $category->id, 'name' => 'Root 1']);
        $root2 = Taxon::create(['taxonomy_id' => $category->id, 'name' => 'Root 2']);
        $root3 = Taxon::create(['taxonomy_id' => $category->id, 'name' => 'Root 3']);
        $root4 = Taxon::create(['taxonomy_id' => $category->id, 'name' => 'Root 4']);

        Taxon::create(['taxonomy_id' => $category->id, 'name' => 'Child of Root 1', 'parent_id' => $root1]);
        Taxon::create(['taxonomy_id' => $category->id, 'name' => 'Second Child of Root 1', 'parent_id' => $root1]);
        Taxon::create(['taxonomy_id' => $category->id, 'name' => 'Child of Root 3', 'parent_id' => $root3]);

        $roots = $category->rootLevelTaxons();

        $this->assertCount(4, $roots);
        $this->assertArrayHasKey($root1->name, $roots->keyBy('name'));
        $this->assertArrayHasKey($root2->name, $roots->keyBy('name'));
        $this->assertArrayHasKey($root3->name, $roots->keyBy('name'));
        $this->assertArrayHasKey($root4->name, $roots->keyBy('name'));
    }
}
